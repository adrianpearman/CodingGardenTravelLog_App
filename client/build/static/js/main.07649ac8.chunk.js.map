{"version":3,"sources":["util/api.js","components/LogMarker.js","components/LogEntryForm.js","components/AddEntryMarker.js","components/App.js","index.js"],"names":["listLogEntries","a","axios","get","response","data","createLogEntry","entry","apiKey","headers","post","console","log","statusText","error","Error","message","LogMarker","viewport","showPopup","setShowPopup","latitude","longitude","onClick","_id","className","style","height","zoom","width","version","id","x","y","viewBox","d","closeButton","closeOnClick","dynamicPosition","onClose","anchor","title","description","Date","visitDate","toLocaleDateString","LogEntryForm","useForm","register","handleSubmit","useState","loading","setLoading","setError","onSubmit","htmlFor","name","type","required","ref","row","disabled","AddEntryMarker","addEntryLocation","setAddEntryLocation","getEntries","App","logEntries","setLogEntries","setViewPort","useEffect","mapStyle","mapboxApiAccessToken","process","onViewportChange","onDblClick","event","lngLat","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07649ac8.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const listLogEntries = async () => {\n  const response = await axios.get(`/api/logs`);\n  return response.data;\n};\n\nexport const createLogEntry = async entry => {\n  const apiKey = entry.apiKey;\n  delete entry.apiKey;\n  const headers = {\n    \"X-APIKEY\": apiKey\n  };\n  const response = await axios.post(`/api/logs`, entry, {\n    headers: headers\n  });\n  const data = response.data;\n  console.log(response);\n  if (response.statusText === \"OK\") {\n    return data;\n  }\n  const error = new Error(response.message);\n  error.response = response;\n  throw error;\n};\n","import React, { Fragment } from \"react\";\nimport { Marker, Popup } from \"react-map-gl\";\n\nconst LogMarker = ({ entry, viewport, showPopup, setShowPopup }) => {\n  return (\n    <Fragment>\n      <Marker latitude={entry.latitude} longitude={entry.longitude}>\n        <div\n          onClick={() =>\n            setShowPopup({\n              showPopup,\n              [entry._id]: true\n            })\n          }\n        >\n          <svg\n            className=\"marker\"\n            style={{\n              height: `${6 * viewport.zoom}px`,\n              width: `${6 * viewport.zoom}px`\n            }}\n            version=\"1.1\"\n            id=\"Layer_1\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 512 512\"\n          >\n            <g>\n              <g>\n                <path d=\"M256,0C153.755,0,70.573,83.182,70.573,185.426c0,126.888,165.939,313.167,173.004,321.035 c6.636,7.391,18.222,7.378,24.846,0c7.065-7.868,173.004-194.147,173.004-321.035C441.425,83.182,358.244,0,256,0z M256,278.719 c-51.442,0-93.292-41.851-93.292-93.293S204.559,92.134,256,92.134s93.291,41.851,93.291,93.293S307.441,278.719,256,278.719z\" />\n              </g>\n            </g>\n          </svg>\n        </div>\n      </Marker>\n      {showPopup[entry._id] ? (\n        <Popup\n          latitude={entry.latitude}\n          longitude={entry.longitude}\n          closeButton={true}\n          closeOnClick={true}\n          dynamicPosition={true}\n          onClose={() => setShowPopup()}\n          anchor=\"top\"\n        >\n          <div className=\"popUp\">\n            <h3>{entry.title}</h3>\n            <p>{entry.description}</p>\n            <small>\n              Visit Date:\n              {new Date(entry.visitDate).toLocaleDateString()}\n            </small>\n          </div>\n        </Popup>\n      ) : (\n        <></>\n      )}\n    </Fragment>\n  );\n};\n\nexport default LogMarker;\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { createLogEntry } from \"../util/api\";\n\nconst LogEntryForm = ({ latitude, longitude, onClose }) => {\n  const { register, handleSubmit } = useForm();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const onSubmit = async data => {\n    try {\n      setLoading(true);\n      await createLogEntry({ ...data, latitude, longitude });\n      onClose();\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form className=\"entryForm\" onSubmit={handleSubmit(onSubmit)}>\n      {error ? <h3 className=\"error\">{error}</h3> : null}\n      <label htmlFor=\"apiKey\">APIKEY</label>\n      <input name=\"apiKey\" type=\"password\" required ref={register} />\n      <label htmlFor=\"title\">Title</label>\n      <input name=\"title\" required ref={register} />\n      <label htmlFor=\"comments\">Comments</label>\n      <textarea name=\"comments\" row={3} ref={register}></textarea>\n      <label htmlFor=\"description\">Description</label>\n      <textarea name=\"description\" row={3} ref={register}></textarea>\n      <label htmlFor=\"image\">Image</label>\n      <input name=\"image\" ref={register} />\n      <label htmlFor=\"visitDate\">Visit Date</label>\n      <input name=\"visitDate\" type=\"date\" required ref={register} />\n      <button disabled={loading}>\n        {loading ? \"Loading...\" : \"Create Log Entry\"}\n      </button>\n    </form>\n  );\n};\n\nexport default LogEntryForm;\n","import React, { Fragment } from \"react\";\nimport { Marker, Popup } from \"react-map-gl\";\nimport LogEntryForm from \"./LogEntryForm\";\n\nconst AddEntryMarker = ({\n  addEntryLocation,\n  viewport,\n  setAddEntryLocation,\n  getEntries\n}) => {\n  return (\n    <Fragment>\n      <Marker\n        latitude={addEntryLocation.latitude}\n        longitude={addEntryLocation.longitude}\n      >\n        <div>\n          <svg\n            className=\"marker marker-secondary\"\n            style={{\n              height: `${6 * viewport.zoom}px`,\n              width: `${6 * viewport.zoom}px`\n            }}\n            version=\"1.1\"\n            id=\"Layer_1\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 512 512\"\n          >\n            <g>\n              <g>\n                <path d=\"M256,0C153.755,0,70.573,83.182,70.573,185.426c0,126.888,165.939,313.167,173.004,321.035 c6.636,7.391,18.222,7.378,24.846,0c7.065-7.868,173.004-194.147,173.004-321.035C441.425,83.182,358.244,0,256,0z M256,278.719 c-51.442,0-93.292-41.851-93.292-93.293S204.559,92.134,256,92.134s93.291,41.851,93.291,93.293S307.441,278.719,256,278.719z\" />\n              </g>\n            </g>\n          </svg>\n        </div>\n      </Marker>\n      <Popup\n        latitude={addEntryLocation.latitude}\n        longitude={addEntryLocation.longitude}\n        closeButton={true}\n        closeOnClick={false}\n        dynamicPosition={true}\n        onClose={() => setAddEntryLocation(null)}\n        anchor=\"top\"\n      >\n        <div className=\"popUp\">\n          <LogEntryForm\n            onClose={() => {\n              setAddEntryLocation(null);\n              getEntries();\n            }}\n            latitude={addEntryLocation.latitude}\n            longitude={addEntryLocation.longitude}\n          />\n        </div>\n      </Popup>\n    </Fragment>\n  );\n};\n\nexport default AddEntryMarker;\n","import React, { useState, useEffect } from \"react\";\nimport ReactMapGL from \"react-map-gl\";\nimport { listLogEntries } from \"../util/api\";\nimport LogMarker from \"./LogMarker\";\nimport AddEntryMarker from \"./AddEntryMarker\";\n\nconst App = () => {\n  const [addEntryLocation, setAddEntryLocation] = useState(null);\n  const [logEntries, setLogEntries] = useState([]);\n  const [showPopup, setShowPopup] = useState({});\n  const [viewport, setViewPort] = useState({\n    width: \"100vw\",\n    height: \"100vh\",\n    latitude: 37.6,\n    longitude: -95.665,\n    zoom: 3\n  });\n\n  const getEntries = async () => {\n    setLogEntries(await listLogEntries());\n  };\n\n  useEffect(() => {\n    getEntries();\n  }, []);\n\n  const showMarkerPopup = event => {\n    const [longitude, latitude] = event.lngLat;\n    setAddEntryLocation({\n      latitude,\n      longitude\n    });\n  };\n\n  return (\n    <ReactMapGL\n      {...viewport}\n      mapStyle={\"mapbox://styles/adrianpearman12/ck6iix7kv0f2e1jpeh8lgiy7l\"}\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n      onViewportChange={setViewPort}\n      onDblClick={showMarkerPopup}\n    >\n      {logEntries.map(entry => {\n        return (\n          <LogMarker\n            key={entry._id}\n            entry={entry}\n            viewport={viewport}\n            showPopup={showPopup}\n            setShowPopup={setShowPopup}\n          />\n        );\n      })}\n      {addEntryLocation ? (\n        <AddEntryMarker\n          addEntryLocation={addEntryLocation}\n          viewport={viewport}\n          setAddEntryLocation={setAddEntryLocation}\n          getEntries={getEntries}\n        />\n      ) : null}\n    </ReactMapGL>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}
{"version":3,"sources":["util/api.js","components/LogMarker.js","components/LogEntryForm.js","components/AddEntryMarker.js","components/App.js","index.js"],"names":["listLogEntries","a","axios","get","response","data","createLogEntry","entry","post","LogMarker","viewport","showPopup","setShowPopup","latitude","longitude","onClick","_id","className","style","height","zoom","width","version","id","x","y","viewBox","d","closeButton","closeOnClick","dynamicPosition","onClose","anchor","title","description","Date","visitDate","toLocaleDateString","LogEntryForm","useForm","register","handleSubmit","useState","loading","setLoading","error","setError","onSubmit","message","htmlFor","name","required","ref","row","type","disabled","AddEntryMarker","addEntryLocation","setAddEntryLocation","getEntries","App","logEntries","setLogEntries","setViewPort","useEffect","mapStyle","mapboxApiAccessToken","process","onViewportChange","onDblClick","event","lngLat","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31a02894.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const listLogEntries = async () => {\n  const response = await axios.get(`/api/logs`);\n  return response.data;\n};\n\nexport const createLogEntry = async entry => {\n  const response = await axios.post(`/api/logs`, entry);\n  return response.data;\n};\n","import React, { Fragment } from \"react\";\nimport { Marker, Popup } from \"react-map-gl\";\n\nconst LogMarker = ({ entry, viewport, showPopup, setShowPopup }) => {\n  return (\n    <Fragment>\n      <Marker latitude={entry.latitude} longitude={entry.longitude}>\n        <div\n          onClick={() =>\n            setShowPopup({\n              showPopup,\n              [entry._id]: true\n            })\n          }\n        >\n          <svg\n            className=\"marker\"\n            style={{\n              height: `${6 * viewport.zoom}px`,\n              width: `${6 * viewport.zoom}px`\n            }}\n            version=\"1.1\"\n            id=\"Layer_1\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 512 512\"\n          >\n            <g>\n              <g>\n                <path d=\"M256,0C153.755,0,70.573,83.182,70.573,185.426c0,126.888,165.939,313.167,173.004,321.035 c6.636,7.391,18.222,7.378,24.846,0c7.065-7.868,173.004-194.147,173.004-321.035C441.425,83.182,358.244,0,256,0z M256,278.719 c-51.442,0-93.292-41.851-93.292-93.293S204.559,92.134,256,92.134s93.291,41.851,93.291,93.293S307.441,278.719,256,278.719z\" />\n              </g>\n            </g>\n          </svg>\n        </div>\n      </Marker>\n      {showPopup[entry._id] ? (\n        <Popup\n          latitude={entry.latitude}\n          longitude={entry.longitude}\n          closeButton={true}\n          closeOnClick={true}\n          dynamicPosition={true}\n          onClose={() => setShowPopup()}\n          anchor=\"top\"\n        >\n          <div className=\"popUp\">\n            <h3>{entry.title}</h3>\n            <p>{entry.description}</p>\n            <small>\n              Visit Date:\n              {new Date(entry.visitDate).toLocaleDateString()}\n            </small>\n          </div>\n        </Popup>\n      ) : (\n        <></>\n      )}\n    </Fragment>\n  );\n};\n\nexport default LogMarker;\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { createLogEntry } from \"../util/api\";\n\nconst LogEntryForm = ({ latitude, longitude, onClose }) => {\n  const { register, handleSubmit } = useForm();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const onSubmit = async data => {\n    try {\n      setLoading(true);\n      await createLogEntry({ ...data, latitude, longitude });\n      onClose();\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form className=\"entryForm\" onSubmit={handleSubmit(onSubmit)}>\n      {error ? <h3 className=\"error\">{error}</h3> : null}\n      <label htmlFor=\"title\">Title</label>\n      <input name=\"title\" required ref={register} />\n      <label htmlFor=\"comments\">Comments</label>\n      <textarea name=\"comments\" row={3} ref={register}></textarea>\n      <label htmlFor=\"description\">Description</label>\n      <textarea name=\"description\" row={3} ref={register}></textarea>\n      <label htmlFor=\"image\">Image</label>\n      <input name=\"image\" ref={register} />\n      <label htmlFor=\"visitDate\">Visit Date</label>\n      <input name=\"visitDate\" type=\"date\" required ref={register} />\n      <button disabled={loading}>\n        {loading ? \"Loading...\" : \"Create Log Entry\"}\n      </button>\n    </form>\n  );\n};\n\nexport default LogEntryForm;\n","import React, { Fragment } from \"react\";\nimport { Marker, Popup } from \"react-map-gl\";\nimport LogEntryForm from \"./LogEntryForm\";\n\nconst AddEntryMarker = ({\n  addEntryLocation,\n  viewport,\n  setAddEntryLocation,\n  getEntries\n}) => {\n  return (\n    <Fragment>\n      <Marker\n        latitude={addEntryLocation.latitude}\n        longitude={addEntryLocation.longitude}\n      >\n        <div>\n          <svg\n            className=\"marker marker-secondary\"\n            style={{\n              height: `${6 * viewport.zoom}px`,\n              width: `${6 * viewport.zoom}px`\n            }}\n            version=\"1.1\"\n            id=\"Layer_1\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 512 512\"\n          >\n            <g>\n              <g>\n                <path d=\"M256,0C153.755,0,70.573,83.182,70.573,185.426c0,126.888,165.939,313.167,173.004,321.035 c6.636,7.391,18.222,7.378,24.846,0c7.065-7.868,173.004-194.147,173.004-321.035C441.425,83.182,358.244,0,256,0z M256,278.719 c-51.442,0-93.292-41.851-93.292-93.293S204.559,92.134,256,92.134s93.291,41.851,93.291,93.293S307.441,278.719,256,278.719z\" />\n              </g>\n            </g>\n          </svg>\n        </div>\n      </Marker>\n      <Popup\n        latitude={addEntryLocation.latitude}\n        longitude={addEntryLocation.longitude}\n        closeButton={true}\n        closeOnClick={false}\n        dynamicPosition={true}\n        onClose={() => setAddEntryLocation(null)}\n        anchor=\"top\"\n      >\n        <div className=\"popUp\">\n          <LogEntryForm\n            onClose={() => {\n              setAddEntryLocation(null);\n              getEntries();\n            }}\n            latitude={addEntryLocation.latitude}\n            longitude={addEntryLocation.longitude}\n          />\n        </div>\n      </Popup>\n    </Fragment>\n  );\n};\n\nexport default AddEntryMarker;\n","import React, { useState, useEffect } from \"react\";\nimport ReactMapGL from \"react-map-gl\";\nimport { listLogEntries } from \"../util/api\";\nimport LogMarker from \"./LogMarker\";\nimport AddEntryMarker from \"./AddEntryMarker\";\n\nconst App = () => {\n  const [addEntryLocation, setAddEntryLocation] = useState(null);\n  const [logEntries, setLogEntries] = useState([]);\n  const [showPopup, setShowPopup] = useState({});\n  const [viewport, setViewPort] = useState({\n    width: \"100vw\",\n    height: \"100vh\",\n    latitude: 37.6,\n    longitude: -95.665,\n    zoom: 3\n  });\n\n  const getEntries = async () => {\n    setLogEntries(await listLogEntries());\n  };\n\n  useEffect(() => {\n    getEntries();\n  }, []);\n\n  const showMarkerPopup = event => {\n    const [longitude, latitude] = event.lngLat;\n    setAddEntryLocation({\n      latitude,\n      longitude\n    });\n  };\n\n  return (\n    <ReactMapGL\n      {...viewport}\n      mapStyle={\"mapbox://styles/adrianpearman12/ck6iix7kv0f2e1jpeh8lgiy7l\"}\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n      onViewportChange={setViewPort}\n      onDblClick={showMarkerPopup}\n    >\n      {logEntries.map(entry => {\n        return (\n          <LogMarker\n            key={entry._id}\n            entry={entry}\n            viewport={viewport}\n            showPopup={showPopup}\n            setShowPopup={setShowPopup}\n          />\n        );\n      })}\n      {addEntryLocation ? (\n        <AddEntryMarker\n          addEntryLocation={addEntryLocation}\n          viewport={viewport}\n          setAddEntryLocation={setAddEntryLocation}\n          getEntries={getEntries}\n        />\n      ) : null}\n    </ReactMapGL>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}